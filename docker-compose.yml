version: '2'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.master=true
      - node.data=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
      - http.cors.allow-credentials=true
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
      - server.name=kibana
      - server.host="0"
      - xpack.security.enabled=true
      - xpack.monitoring.enabled=true
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.reporting.enabled=false
      - xpack.grokdebugger.enabled=false
    ports:
      - "5601:5601"
    networks:
      - esnet
    depends_on:
      - elasticsearch

  head:
    image: mobz/elasticsearch-head:5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - "9100:9100"
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  #esconfig1:
  #  driver: local
  #esconfig2:
  #  driver: local

networks:
  elk:
    driver: bridge